eqm0 = eqm0,
eqm1 = eqm1,
eqm2 = eqm2,
eqm3 = eqm3,
daily_eqm0 = daily_eqm0,
daily_eqm1 = daily_eqm1,
daily_eqm2 = daily_eqm2,
daily_eqm3 = daily_eqm3)
metrics = rbind(metrics,metrics_new)
}
metrics %>%
select(1:4) %>%
pivot_longer(names_to = "eqm",cols = -1) %>%
mutate(eqm = case_when(eqm=="eqm1"~"Model 1",
eqm=="eqm2"~"Model 2",
eqm=="eqm3"~"Model 3",
eqm=="eqm0"~"Model 0")) %>%
ggplot(aes(x = window, y = sqrt(value), color = eqm))+
geom_line(linewidth = 0.8)+
scale_color_manual(values = c("darkblue", "red","darkgreen","yellow"))+
scale_x_reverse()+
labs(x = "Window", y = "RMSE", color = "Proposed models")+
theme_bw()+
theme(legend.position = "bottom")
metrics %>%
select(c(1,5,6,7))%>%
pivot_longer(names_to = "daily_eqm",cols = -1)%>%
mutate(daily_eqm = case_when(daily_eqm=="daily_eqm1"~"Model 1",
daily_eqm=="daily_eqm2"~"Model 2",
daily_eqm=="daily_eqm3"~"Model 3",
daily_eqm=="daily_eqm0"~"Model 0")) %>%
ggplot(aes(x = window, y = sqrt(value), color = daily_eqm))+
geom_line(linewidth = 0.8)+
scale_color_manual(values = c("darkblue", "red","darkgreen","yellow"))+
scale_x_reverse()+
labs(x = "Window", y = "RMSE", color = "Proposed Models")+
theme_bw()+
theme(legend.position = "bottom")
report(model0)
forecast0
df_test$predict0
daily_eqm0
eqm0
View(metrics)
metrics %>%
select(1:4) %>%
pivot_longer(names_to = "eqm",cols = -1)
metrics %>%
select(1:4) %>%
pivot_longer(names_to = "eqm",cols = -1) %>%
mutate(eqm = case_when(eqm=="eqm1"~"Model 1",
eqm=="eqm2"~"Model 2",
eqm=="eqm3"~"Model 3",
eqm=="eqm0"~"Model 0"))
metrics %>%
select(1:4) %>%
pivot_longer(names_to = "eqm",cols = -1) %>%
mutate(eqm = case_when(eqm=="eqm1"~"Model 1",
eqm=="eqm2"~"Model 2",
eqm=="eqm3"~"Model 3",
eqm=="eqm0"~"Model 0")) %>%
ggplot(aes(x = window, y = sqrt(value), color = eqm))+
geom_line(linewidth = 0.8)+
scale_color_manual(values = c("darkblue", "red","darkgreen","yellow"))+
scale_x_reverse()+
labs(x = "Window", y = "RMSE", color = "Proposed models")+
theme_bw()+
theme(legend.position = "bottom")
metrics %>%
select(1:4) %>%
pivot_longer(names_to = "eqm",cols = -1) %>%
mutate(eqm = case_when(eqm=="eqm1"~"Model 1",
eqm=="eqm2"~"Model 2",
eqm=="eqm3"~"Model 3",
eqm=="eqm0"~"Model 0")) %>%
ggplot(aes(x = window, y = sqrt(value), color = eqm))+
geom_line(linewidth = 0.8)+
scale_color_manual(values = c("darkblue", "red","darkgreen","black"))+
scale_x_reverse()+
labs(x = "Window", y = "RMSE", color = "Proposed models")+
theme_bw()+
theme(legend.position = "bottom")
metrics %>%
select(1:4) %>%
pivot_longer(names_to = "eqm",cols = -1) %>%
mutate(eqm = case_when(eqm=="eqm1"~"Model 1",
eqm=="eqm2"~"Model 2",
eqm=="eqm3"~"Model 3",
eqm=="eqm0"~"Model 4")) %>%
ggplot(aes(x = window, y = sqrt(value), color = eqm))+
geom_line(linewidth = 0.8)+
scale_color_manual(values = c("darkblue", "red","darkgreen","black"))+
scale_x_reverse()+
labs(x = "Window", y = "RMSE", color = "Proposed models")+
theme_bw()+
theme(legend.position = "bottom")
metrics %>%
select(1:4) %>%
pivot_longer(names_to = "eqm",cols = -1) %>%
mutate(eqm = case_when(eqm=="eqm1"~"Model 1",
eqm=="eqm2"~"Model 2",
eqm=="eqm3"~"Model 3",
eqm=="eqm0"~"Model 0"))
metrics %>%
select(1:4)
View(metrics)
metrics %>%
select(1:5) %>%
pivot_longer(names_to = "eqm",cols = -1) %>%
mutate(eqm = case_when(eqm=="eqm1"~"Model 1",
eqm=="eqm2"~"Model 2",
eqm=="eqm3"~"Model 3",
eqm=="eqm0"~"Model 0")) %>%
ggplot(aes(x = window, y = sqrt(value), color = eqm))+
geom_line(linewidth = 0.8)+
scale_color_manual(values = c("darkblue", "red","darkgreen","yellow"))+
scale_x_reverse()+
labs(x = "Window", y = "RMSE", color = "Proposed models")+
theme_bw()+
theme(legend.position = "bottom")
metrics %>%
select(c(1,6,7,8,9))%>%
pivot_longer(names_to = "daily_eqm",cols = -1)%>%
mutate(daily_eqm = case_when(daily_eqm=="daily_eqm1"~"Model 1",
daily_eqm=="daily_eqm2"~"Model 2",
daily_eqm=="daily_eqm3"~"Model 3",
daily_eqm=="daily_eqm0"~"Model 0")) %>%
ggplot(aes(x = window, y = sqrt(value), color = daily_eqm))+
geom_line(linewidth = 0.8)+
scale_color_manual(values = c("darkblue", "red","darkgreen","yellow"))+
scale_x_reverse()+
labs(x = "Window", y = "RMSE", color = "Proposed Models")+
theme_bw()+
theme(legend.position = "bottom")
metrics %>%
select(c(1,6,7,8,9))%>%
pivot_longer(names_to = "daily_eqm",cols = -1)%>%
mutate(daily_eqm = case_when(daily_eqm=="daily_eqm1"~"Model 1",
daily_eqm=="daily_eqm2"~"Model 2",
daily_eqm=="daily_eqm3"~"Model 3",
daily_eqm=="daily_eqm0"~"Model 0")) %>%
ggplot(aes(x = window, y = sqrt(value), color = daily_eqm))+
geom_line(linewidth = 0.8)+
scale_color_manual(values = c("darkblue", "red","darkgreen","purple"))+
scale_x_reverse()+
labs(x = "Window", y = "RMSE", color = "Proposed Models")+
theme_bw()+
theme(legend.position = "bottom")
metrics %>%
select(1:5) %>%
pivot_longer(names_to = "eqm",cols = -1) %>%
mutate(eqm = case_when(eqm=="eqm1"~"Model 1",
eqm=="eqm2"~"Model 2",
eqm=="eqm3"~"Model 3",
eqm=="eqm0"~"Model 0")) %>%
ggplot(aes(x = window, y = sqrt(value), color = eqm))+
geom_line(linewidth = 0.8)+
scale_color_manual(values = c("darkblue", "red","darkgreen","purple"))+
scale_x_reverse()+
labs(x = "Window", y = "RMSE", color = "Proposed models")+
theme_bw()+
theme(legend.position = "bottom")
metrics %>%
select(c(1,6,7,8,9))%>%
pivot_longer(names_to = "daily_eqm",cols = -1)%>%
mutate(daily_eqm = case_when(daily_eqm=="daily_eqm1"~"Model 1",
daily_eqm=="daily_eqm2"~"Model 2",
daily_eqm=="daily_eqm3"~"Model 3",
daily_eqm=="daily_eqm0"~"Model 0")) %>%
ggplot(aes(x = window, y = sqrt(value), color = daily_eqm))+
geom_line(linewidth = 0.8)+
scale_color_manual(values = c("darkblue", "red","darkgreen","purple"))+
scale_x_reverse()+
labs(x = "Window", y = "RMSE", color = "Proposed Models")+
theme_bw()+
theme(legend.position = "bottom")
metrics %>%
summarise(mean_eqm_model0 = mean(eqm0),
mean_eqm_model1 = mean(eqm1),
mean_eqm_model2 = mean(eqm2),
mean_eqm_model3 = mean(eqm3))
metrics %>%
summarise(mean_daily_model0 = mean(daily_eqm0),
mean_daily_model1 = mean(daily_eqm1),
mean_daily_model2 = mean(daily_eqm2),
mean_daily_model3 = mean(daily_eqm3),)
View(metrics)
op = par(mfrow = c(1,2))
acf(metrics$eqm0)
pacf(metrics$eqm0)
par(op)
tsdf %>%
pivot_longer(c(temp_max,
preciptation,
windspeed,
sun_radiation), names_to = "var", values_to = "value") %>%
ggplot(aes(x = time, y = value)) +
geom_line() +
facet_grid(vars(var), scales = "free_y")+
labs(title = "Max Temperature over Campinas Region",
y = "Daily Max Temperature",
x = "Date")
op = par(mfrow = c(1,2))
acf(tsdf$temp_max)
pacf(tsdf$temp_max)
par(op)
tsdf = df %>%
mutate(time = as.Date(daily.time)) %>%
rename(temp_max = daily.temperature_2m_max,
temp_min = daily.temperature_2m_min,
preciptation = daily.precipitation_sum,
windspeed = daily.windspeed_10m_max,
sun_radiation = daily.shortwave_radiation_sum
) %>%
select(time,
temp_max,
temp_min,
preciptation,
windspeed,
sun_radiation) %>%
as_tsibble()
tsdf = df %>%
mutate(time = as.Date(daily.time)) %>%
rename(temp_max = daily.temperature_2m_max,
temp_min = daily.temperature_2m_min,
preciptation = daily.precipitation_sum,
windspeed = daily.windspeed_10m_max,
sun_radiation = daily.shortwave_radiation_sum
) %>%
select(time,
temp_max,
temp_min,
preciptation,
windspeed,
sun_radiation) %>%
as_tsibble()
end_date = (today() - 1) #Yesterday
begin_date = "2022-11-04" #Has no records before
url <- paste0("https://api.open-meteo.com/v1/forecast?latitude=-22.91&longitude=-47.06&daily=temperature_2m_max,temperature_2m_min,precipitation_sum,windspeed_10m_max,shortwave_radiation_sum&current_weather=true&forecast_days=1&start_date=",begin_date,"&end_date=",end_date,"&timezone=America%2FSao_Paulo")
resposta <- GET(url)
dados_json <- content(resposta, as = "text")
dados <- fromJSON(dados_json)
df <- as.data.frame(dados)
tsdf = df %>%
mutate(time = as.Date(daily.time)) %>%
rename(temp_max = daily.temperature_2m_max,
temp_min = daily.temperature_2m_min,
preciptation = daily.precipitation_sum,
windspeed = daily.windspeed_10m_max,
sun_radiation = daily.shortwave_radiation_sum
) %>%
select(time,
temp_max,
temp_min,
preciptation,
windspeed,
sun_radiation) %>%
as_tsibble()
tsdf %>%
pivot_longer(c(temp_max,
preciptation,
windspeed,
sun_radiation), names_to = "var", values_to = "value") %>%
ggplot(aes(x = time, y = value)) +
geom_line() +
facet_grid(vars(var), scales = "free_y")+
labs(title = "Max Temperature over Campinas Region",
y = "Daily Max Temperature",
x = "Date")
tsdf %>%
pivot_longer(c(temp_max,
preciptation,
windspeed,
sun_radiation), names_to = "var", values_to = "value") %>%
ggplot(aes(x = time, y = value)) +
geom_line() +
facet_grid(vars(var), scales = "free_y")+
labs(title = "Max Temperature over Campinas Region",
y = "Daily Max Temperature",
x = "Date")+
theme_bw()
acf(tsdf$temp_max) + pacf(tsdf$temp_max)
op = par(mfrow = c(1,2))
acf(tsdf$temp_max)
pacf(tsdf$temp_max)
par(op)
op = par(mfrow = c(1,2))
tsdf %>%
pivot_longer(c(temp_max,
preciptation,
windspeed,
sun_radiation), names_to = "var", values_to = "value") %>%
ggplot(aes(x = time, y = value)) +
geom_line() +
facet_grid(vars(var), scales = "free_y")+
labs(title = "Max Temperature over Campinas Region",
y = "Daily Max Temperature",
x = "Date")+
theme_bw()
par(op)
pacf(tsdf$temp_max)
acf(tsdf$temp_max)
pacf(tsdf$temp_max)
par(op)
op = par(mfrow = c(1,2))
acf(tsdf$temp_max)
pacf(tsdf$temp_max)
par(op)
View(tsdf)
tsdf %>%
pivot_longer(c(temp_max,
preciptation,
windspeed,
sun_radiation), names_to = "var", values_to = "value") %>%
ggplot(aes(x = time, y = value)) +
geom_line() +
facet_grid(vars(var), scales = "free_y")+
labs(title = "Max Temperature over Campinas Region",
y = "Daily Max Temperature",
x = "Date")+
theme_bw()
metrics %>%
select(1:5) %>%
pivot_longer(names_to = "eqm",cols = -1) %>%
mutate(eqm = case_when(eqm=="eqm1"~"Model 1",
eqm=="eqm2"~"Model 2",
eqm=="eqm3"~"Model 3",
eqm=="eqm0"~"Model 0")) %>%
ggplot(aes(x = window, y = sqrt(value), color = eqm))+
geom_line(linewidth = 0.8)+
scale_color_manual(values = c("darkblue", "red","darkgreen","purple"))+
scale_x_reverse()+
labs(x = "Window", y = "RMSE", color = "Proposed models")+
theme_bw()+
theme(legend.position = "bottom")
metrics %>%
select(c(1,6,7,8,9))%>%
pivot_longer(names_to = "daily_eqm",cols = -1)%>%
mutate(daily_eqm = case_when(daily_eqm=="daily_eqm1"~"Model 1",
daily_eqm=="daily_eqm2"~"Model 2",
daily_eqm=="daily_eqm3"~"Model 3",
daily_eqm=="daily_eqm0"~"Model 0")) %>%
ggplot(aes(x = window, y = sqrt(value), color = daily_eqm))+
geom_line(linewidth = 0.8)+
scale_color_manual(values = c("darkblue", "red","darkgreen","purple"))+
scale_x_reverse()+
labs(x = "Window", y = "RMSE", color = "Proposed Models")+
theme_bw()+
theme(legend.position = "bottom")
metrics %>%
summarise(mean_eqm_model0 = mean(eqm0),
mean_eqm_model1 = mean(eqm1),
mean_eqm_model2 = mean(eqm2),
mean_eqm_model3 = mean(eqm3))
metrics %>%
summarise(mean_daily_model0 = mean(daily_eqm0),
mean_daily_model1 = mean(daily_eqm1),
mean_daily_model2 = mean(daily_eqm2),
mean_daily_model3 = mean(daily_eqm3))
metrics = NULL
for(i in 0:20){
df = tsdf[1:(length(tsdf$time)-28+i),]
model0 = df %>%
model(ARIMA(temp_max ~ pdq(0,1,4)+ PDQ(2,0,0)))
model1 = df %>%
model(ARIMA(temp_max ~ sun_radiation + pdq(0,1,4)+ PDQ(2,0,0)))
model2 = df %>%
model(ARIMA(temp_max ~ windspeed + preciptation + pdq(3,1,1)+ PDQ(1,0,0)))
model3 = df %>%
model(ARIMA(temp_max ~ windspeed + preciptation + sun_radiation + pdq(3,0,2)+ PDQ(1,0,0)))
df_future = tsdf[(length(tsdf$time)-20+i):(length(tsdf$time)-13+i),1:2]
df_future = df_future %>%
mutate(preciptation = mean(df$preciptation),
sun_radiation = mean(df$sun_radiation),
windspeed= mean(df$windspeed))
forecast0 = forecast(model0, new_data = df_future)
forecast1 = forecast(model1, new_data = df_future)
forecast2 = forecast(model2, new_data = df_future)
forecast3 = forecast(model3, new_data = df_future)
df_test = tsdf[(length(tsdf$time)-20+i):(length(tsdf$time)-13+i),1:2]
df_test = df_test %>%
mutate(predict0 = forecast0$.mean,
predict1 = forecast1$.mean,
predict2 = forecast2$.mean,
predict3 = forecast3$.mean)
daily_eqm0 = ((df_test$temp_max - df_test$predict0)^2)[1]
daily_eqm1 = ((df_test$temp_max - df_test$predict1)^2)[1]
daily_eqm2 = ((df_test$temp_max - df_test$predict2)^2)[1]
daily_eqm3 = ((df_test$temp_max - df_test$predict3)^2)[1]
eqm0 = (sum(df_test$temp_max - df_test$predict0)^2)/nrow(df_test)
eqm1 = (sum(df_test$temp_max - df_test$predict1)^2)/nrow(df_test)
eqm2 = (sum(df_test$temp_max - df_test$predict2)^2)/nrow(df_test)
eqm3 = (sum(df_test$temp_max - df_test$predict3)^2)/nrow(df_test)
metrics_new = data.frame(window = (21 - i),
eqm0 = eqm0,
eqm1 = eqm1,
eqm2 = eqm2,
eqm3 = eqm3,
daily_eqm0 = daily_eqm0,
daily_eqm1 = daily_eqm1,
daily_eqm2 = daily_eqm2,
daily_eqm3 = daily_eqm3)
metrics = rbind(metrics,metrics_new)
}
for(i in 0:20){
df = tsdf[1:(length(tsdf$time)-28+i),]
model0 = df %>%
model(ARIMA(temp_max ~ pdq(0,1,4)+ PDQ(2,0,0)))
model1 = df %>%
model(ARIMA(temp_max ~ sun_radiation + pdq(0,1,4)+ PDQ(2,0,0)))
model2 = df %>%
model(ARIMA(temp_max ~ windspeed + preciptation + pdq(3,1,1)+ PDQ(1,0,0)))
model3 = df %>%
model(ARIMA(temp_max ~ windspeed + preciptation + sun_radiation + pdq(3,0,2)+ PDQ(1,0,0)))
df_future = tsdf[(length(tsdf$time)-20+i):(length(tsdf$time)-13+i),1:2]
df_future = df_future %>%
mutate(preciptation = mean(df$preciptation),
sun_radiation = mean(df$sun_radiation),
windspeed= mean(df$windspeed))
forecast0 = forecast(model0, new_data = df_future)
forecast1 = forecast(model1, new_data = df_future)
forecast2 = forecast(model2, new_data = df_future)
forecast3 = forecast(model3, new_data = df_future)
eqm0 = (sum(df_test$temp_max - df_test$predict0)^2)/nrow(df_test)
eqm1 = (sum(df_test$temp_max - df_test$predict1)^2)/nrow(df_test)
eqm2 = (sum(df_test$temp_max - df_test$predict2)^2)/nrow(df_test)
eqm3 = (sum(df_test$temp_max - df_test$predict3)^2)/nrow(df_test)
metrics_new = data.frame(window = (21 - i),
eqm0 = eqm0,
eqm1 = eqm1,
eqm2 = eqm2,
eqm3 = eqm3)
metrics = rbind(metrics,metrics_new)
}
df = tsdf[1:(length(tsdf$time)-28),]
model0 = df %>%
model(ARIMA(temp_max ~ pdq(0,1,4)+ PDQ(2,0,0)))
model1 = df %>%
model(ARIMA(temp_max ~ sun_radiation + pdq(0,1,4)+ PDQ(2,0,0)))
model2 = df %>%
model(ARIMA(temp_max ~ windspeed + preciptation + pdq(3,1,1)+ PDQ(1,0,0)))
model3 = df %>%
model(ARIMA(temp_max ~ windspeed + preciptation + sun_radiation + pdq(3,0,2)+ PDQ(1,0,0)))
df_future = tsdf[(length(tsdf$time)-20):(length(tsdf$time)-13),1:2]
View(df_future)
df_future = tsdf[(length(tsdf$time)-20+i):(length(tsdf$time)-14+i),1:2]
df_future = tsdf[(length(tsdf$time)-27+i):(length(tsdf$time)-20+i),1:2]
df_future = tsdf[(length(tsdf$time)-27+i):(length(tsdf$time)-21+i),1:2]
i=0
df = tsdf[1:(length(tsdf$time)-28+i),]
model0 = df %>%
model(ARIMA(temp_max ~ pdq(0,1,4)+ PDQ(2,0,0)))
model1 = df %>%
model(ARIMA(temp_max ~ sun_radiation + pdq(0,1,4)+ PDQ(2,0,0)))
model2 = df %>%
model(ARIMA(temp_max ~ windspeed + preciptation + pdq(3,1,1)+ PDQ(1,0,0)))
model3 = df %>%
model(ARIMA(temp_max ~ windspeed + preciptation + sun_radiation + pdq(3,0,2)+ PDQ(1,0,0)))
df_future = tsdf[(length(tsdf$time)-27+i):(length(tsdf$time)-21+i),1:2]
df_future = df_future %>%
mutate(preciptation = mean(df$preciptation),
sun_radiation = mean(df$sun_radiation),
windspeed= mean(df$windspeed))
forecast0 = forecast(model0, new_data = df_future)
forecast1 = forecast(model1, new_data = df_future)
forecast2 = forecast(model2, new_data = df_future)
forecast3 = forecast(model3, new_data = df_future)
eqm0 = (sum(df_test$temp_max - df_test$predict0)^2)/nrow(df_test)
eqm1 = (sum(df_test$temp_max - df_test$predict1)^2)/nrow(df_test)
eqm2 = (sum(df_test$temp_max - df_test$predict2)^2)/nrow(df_test)
eqm3 = (sum(df_test$temp_max - df_test$predict3)^2)/nrow(df_test)
metrics_new = data.frame(window = (21 - i),
eqm0 = eqm0,
eqm1 = eqm1,
eqm2 = eqm2,
eqm3 = eqm3)
metrics = rbind(metrics,metrics_new)
metrics_new = NULL
metrics_alt = NULL
for(i in 0:20){
df = tsdf[1:(length(tsdf$time)-28+i),]
model0 = df %>%
model(ARIMA(temp_max ~ pdq(0,1,4)+ PDQ(2,0,0)))
model1 = df %>%
model(ARIMA(temp_max ~ sun_radiation + pdq(0,1,4)+ PDQ(2,0,0)))
model2 = df %>%
model(ARIMA(temp_max ~ windspeed + preciptation + pdq(3,1,1)+ PDQ(1,0,0)))
model3 = df %>%
model(ARIMA(temp_max ~ windspeed + preciptation + sun_radiation + pdq(3,0,2)+ PDQ(1,0,0)))
df_future = tsdf[(length(tsdf$time)-27+i):(length(tsdf$time)-21+i),1:2]
df_future = df_future %>%
mutate(preciptation = mean(df$preciptation),
sun_radiation = mean(df$sun_radiation),
windspeed= mean(df$windspeed))
forecast0 = forecast(model0, new_data = df_future)
forecast1 = forecast(model1, new_data = df_future)
forecast2 = forecast(model2, new_data = df_future)
forecast3 = forecast(model3, new_data = df_future)
eqm0 = (sum(df_test$temp_max - df_test$predict0)^2)/nrow(df_test)
eqm1 = (sum(df_test$temp_max - df_test$predict1)^2)/nrow(df_test)
eqm2 = (sum(df_test$temp_max - df_test$predict2)^2)/nrow(df_test)
eqm3 = (sum(df_test$temp_max - df_test$predict3)^2)/nrow(df_test)
metrics_new = data.frame(window = (21 - i),
eqm0 = eqm0,
eqm1 = eqm1,
eqm2 = eqm2,
eqm3 = eqm3)
metrics_alt = rbind(metrics_alt,metrics_new)
}
View(metrics_alt)
end_date = (today() - 1) #Yesterday
library(httr)
